{"version":3,"sources":["Home.js","App.js","reportWebVitals.js","index.js"],"names":["rpc","JsonRpc","fetch","Home","ual","transactionStakeToSelf","a","actions","account","name","data","from","activeUser","accountName","to","quantity","amountToSend","memo","numberOfDaysOption","authorization","actor","permission","signTransaction","blocksBehind","expireSeconds","broadcast","sign","r","console","log","error","JSON","stringify","transactionStakeToUser","accountToStake","transactionDeposit","transactionUpdateBalance","username","transactionWithdraw","amount","SEND_OPTIONS","TRANSACTIONS","useState","setAccount","sendOption","setSendOption","setNumberOfDaysOptions","setAmountToSend","amountToBeStaked","setAmountToBeStaked","setAccountToStake","exponent","setExponent","totalWax","setTotalWax","currentLoanedWax","setCurrentLoanedWax","multiDayFee","setMultiDayFee","currentBalance","setCurrentBalance","getConfig","get_table_rows","json","code","scope","table","limit","reverse","show_payer","total_wax","current_loaned","multi_day_fee","multiplier","table2","i","length","wax","updateCost","useEffect","run","get_account","acc","interval","setInterval","clearInterval","openLoginModal","showModal","renderForm","style","margin","borderSpacing","textAlign","renderAmountToSendInput","renderNumberOfDaysDropdown","renderAmountToBeStaked","renderUserInput","renderUpdateBalance","renderWithdraw","width","type","value","onChange","e","target","toLocaleString","renderSubmitButton","onClick","call","core_liquid_balance","activeAuthenticator","logout","renderLogoutButton","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","myChain","chainId","rpcEndpoints","protocol","host","port","anchor","Anchor","appName","Wax","MyUALConsumer","withUAL","ReactDOM","render","StrictMode","chains","authenticators","document","getElementById"],"mappings":"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","file":"static/js/main.82dfc4bf.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { JsonRpc } from \"eosjs\";\r\n\r\n// const rpc = new JsonRpc(\"https://wax.greymass.com\", { fetch });\r\nconst rpc = new JsonRpc(\"https://testnet.wax.eosdetroit.io\", { fetch });\r\n\r\nconst Home = ({ ual }) => {\r\n  const transactionStakeToSelf = async () => {\r\n    const actions = {\r\n      actions: [\r\n        {\r\n          account: \"eosio.token\",\r\n          name: \"transfer\",\r\n          data: {\r\n            from: ual.activeUser.accountName,\r\n            to: \"cpu4\",\r\n            quantity: amountToSend + \" WAX\",\r\n            memo: numberOfDaysOption + \"\",\r\n          },\r\n          authorization: [\r\n            {\r\n              actor: ual.activeUser.accountName,\r\n              permission: \"active\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    try {\r\n    const r = await ual.activeUser.signTransaction(actions, {\r\n      blocksBehind: 5,\r\n      expireSeconds: 300,\r\n      broadcast: true,\r\n      sign: true,\r\n    })\r\n    console.log(r);\r\n    } catch (e) {\r\n        console.error(e);\r\n        // process.exit();\r\n        console.log(JSON.stringify(e));\r\n    }\r\n  };\r\n\r\n  const transactionStakeToUser = async () => {\r\n    const actions = {\r\n      actions: [\r\n        {\r\n          account: \"eosio.token\",\r\n          name: \"transfer\",\r\n          data: {\r\n            from: ual.activeUser.accountName,\r\n            to: \"cpu4\",\r\n            quantity: amountToSend + \" WAX\",\r\n            memo: \"USER:\" + accountToStake + \",\" + numberOfDaysOption,\r\n          },\r\n          authorization: [\r\n            {\r\n              actor: ual.activeUser.accountName,\r\n              permission: \"active\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    try {\r\n    const r = await ual.activeUser.signTransaction(actions, {\r\n      blocksBehind: 5,\r\n        expireSeconds: 300,\r\n        broadcast: true,\r\n        sign: true,\r\n    })\r\n    console.log(r);\r\n    } catch (e) {\r\n        console.error(e);\r\n        // process.exit();\r\n        console.log(JSON.stringify(e));\r\n    }\r\n  };\r\n\r\n  const transactionDeposit = async () => {\r\n    const actions = {\r\n      actions: [\r\n        {\r\n          account: \"eosio.token\",\r\n          name: \"transfer\",\r\n          data: {\r\n            from: ual.activeUser.accountName,\r\n            to: \"cpu4\",\r\n            quantity: amountToSend + \" WAX\",\r\n            memo: \"Deposit\",\r\n          },\r\n          authorization: [\r\n            {\r\n              actor: ual.activeUser.accountName,\r\n              permission: \"active\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    try {\r\n    const r = await ual.activeUser.signTransaction(actions, {\r\n      blocksBehind: 5,\r\n      expireSeconds: 300,\r\n      broadcast: true,\r\n      sign: true,\r\n    })\r\n    console.log(r);\r\n    } catch (e) {\r\n        console.error(e);\r\n        // process.exit();\r\n        console.log(JSON.stringify(e));\r\n    }\r\n  };\r\n\r\n  const transactionUpdateBalance = async () => {\r\n    const actions = {\r\n      actions: [\r\n        {\r\n          account: \"cpu4\",\r\n          name: \"updateBalance\",\r\n          data: {\r\n            username: ual.activeUser.accountName,\r\n          },\r\n          authorization: [\r\n            {\r\n              actor: ual.activeUser.accountName,\r\n              permission: \"active\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    try {\r\n    const r = await ual.activeUser.signTransaction(actions, {\r\n      blocksBehind: 5,\r\n      expireSeconds: 300,\r\n      broadcast: true,\r\n      sign: true,\r\n    })\r\n    console.log(r);\r\n    } catch (e) {\r\n        console.error(e);\r\n        // process.exit();\r\n        console.log(JSON.stringify(e));\r\n    }\r\n  };\r\n\r\n  const transactionWithdraw = async () => {\r\n    const actions = {\r\n      actions: [\r\n        {\r\n          account: \"cpu4\",\r\n          name: \"withdraw\",\r\n          data: {\r\n            username: ual.activeUser.accountName,\r\n            amount: amountToSend + \" WAX\",\r\n          },\r\n          authorization: [\r\n            {\r\n              actor: ual.activeUser.accountName,\r\n              permission: \"active\",\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    try {\r\n    const r = await ual.activeUser.signTransaction(actions, {\r\n      blocksBehind: 5,\r\n      expireSeconds: 300,\r\n      broadcast: true,\r\n      sign: true,\r\n    })\r\n    console.log(r);\r\n    } catch (e) {\r\n        console.error(e);\r\n        // process.exit();\r\n        console.log(JSON.stringify(e));\r\n    }\r\n  };\r\n\r\n  const SEND_OPTIONS = {\r\n    self: \"Request Self Stake\",\r\n    other: \"Stake To User\",\r\n    deposit: \"Deposit And Earn\",\r\n    update: \"Update Balance\",\r\n    withdraw: \"Withdraw\",\r\n  };\r\n\r\n  const TRANSACTIONS = {\r\n    [SEND_OPTIONS.self]: transactionStakeToSelf,\r\n    [SEND_OPTIONS.other]: transactionStakeToUser,\r\n    [SEND_OPTIONS.deposit]: transactionDeposit,\r\n    [SEND_OPTIONS.update]: transactionUpdateBalance,\r\n    [SEND_OPTIONS.withdraw]: transactionWithdraw,\r\n\r\n  };\r\n\r\n  const [account, setAccount] = useState();\r\n  const [sendOption, setSendOption] = useState(SEND_OPTIONS.self);\r\n  const [numberOfDaysOption, setNumberOfDaysOptions] = useState(1);\r\n  const [amountToSend, setAmountToSend] = useState(0);\r\n  const [amountToBeStaked, setAmountToBeStaked] = useState(0);\r\n  const [accountToStake, setAccountToStake] = useState(\"\");\r\n  const [exponent, setExponent] = useState(1);\r\n  const [totalWax, setTotalWax] = useState();\r\n  const [currentLoanedWax, setCurrentLoanedWax] = useState();\r\n  const [multiDayFee, setMultiDayFee] = useState(0);\r\n  const [currentBalance, setCurrentBalance] = useState(0);\r\n\r\n\r\n\r\n// useCallback(() => {\r\nconst getConfig = async () => {\r\n\r\n  try {\r\n    const table = await rpc.get_table_rows({\r\n        json: true, // Get the response as json\r\n        code: \"cpu4\", // Contract that we target\r\n        scope: \"cpu4\", // Account that owns the data\r\n        table: \"config\", // Table name\r\n        limit: 1, // Maximum number of rows that we want to get\r\n        reverse: false, // Optional: Get reversed data\r\n        show_payer: false, // Optional: Show ram payer\r\n    });\r\n    console.log(table[\"rows\"][0]);\r\n    setExponent(table[\"rows\"][0].exponent);\r\n    setTotalWax(table[\"rows\"][0].total_wax);\r\n    setCurrentLoanedWax(table[\"rows\"][0].current_loaned);\r\n    setMultiDayFee(table[\"rows\"][0].multi_day_fee);\r\n\r\n    if (amountToSend && amountToSend > 0) \r\n    {\r\n      var multiplier = (1.0 - (currentLoanedWax / totalWax)^(exponent)) * 100;\r\n      if (multiplier < 10)\r\n      {\r\n          multiplier = 10;\r\n      }\r\n      var total = multiplier \r\n        * (1 - (multiDayFee * (numberOfDaysOption - 1)))\r\n        * (amountToSend / numberOfDaysOption);\r\n      setAmountToBeStaked(total);\r\n    }\r\n\r\n    if (account) {\r\n      const table2 = await rpc.get_table_rows({\r\n          json: true, // Get the response as json\r\n          code: \"cpu4\", // Contract that we target\r\n          scope: \"cpu4\", // Account that owns the data\r\n          table: \"deposits\", // Table name\r\n          limit: 1000, // Maximum number of rows that we want to get\r\n          reverse: false, // Optional: Get reversed data\r\n          show_payer: false, // Optional: Show ram payer\r\n      });\r\n\r\n      for (var i = 0; i < table2[\"rows\"].length; i++) {\r\n        if (table2[\"rows\"][i].account === account) \r\n        {\r\n          setCurrentBalance(table2[\"rows\"][i].wax);\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n    console.log(JSON.stringify(e));\r\n  }\r\n};\r\n// });\r\n\r\n  const updateCost = async () => {\r\n    var multiplier = (1.0 - (currentLoanedWax / totalWax)^(exponent)) * 100;\r\n    if (multiplier < 10)\r\n    {\r\n        multiplier = 10;\r\n    }\r\n    var total = multiplier \r\n      * (1 - (multiDayFee * (numberOfDaysOption - 1)))\r\n      * (amountToSend / numberOfDaysOption);\r\n    setAmountToBeStaked(total);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const run = async () => {\r\n      if (ual.activeUser) {\r\n        try {\r\n          const acc = await rpc.get_account(ual.activeUser.accountName);\r\n          setAccount(acc);\r\n        } catch (e) {\r\n            console.error(e);\r\n            // process.exit();\r\n            console.log(JSON.stringify(e));\r\n        }\r\n\r\n      }\r\n    };\r\n    run();\r\n  }, [ual.activeUser]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    if (amountToSend && amountToSend > 0) {\r\n\r\n      // CALL CONTRACT / DO CALCULATION\r\n      updateCost();\r\n    } else {\r\n      setAmountToBeStaked(0);\r\n    }\r\n  }, [amountToSend]);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const run = async () => {\r\n        await getConfig();\r\n      };\r\n\r\n      run();\r\n\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [getConfig]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const openLoginModal = () => {\r\n    if (!ual.activeUser) {\r\n      ual.showModal();\r\n    }\r\n  };\r\n\r\n  const renderLoginButton = () => {\r\n    return (\r\n      <div>\r\n        <button onClick={openLoginModal}>Login</button>\r\n        <br />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderLogoutButton = () => {\r\n    if (!!ual.activeUser && !!ual.activeAuthenticator) {\r\n      return (\r\n        <div>\r\n          <br />\r\n          <button onClick={ual.logout}>Logout</button>\r\n          <br />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderNameAndBalance = () => {\r\n    return ual.activeUser && account ? (\r\n      <div>\r\n        {ual.activeUser.accountName} {account.core_liquid_balance}\r\n        <br />\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const depositedWax = () => {\r\n    return ual.activeUser && account ? (\r\n      <div>\r\n        {currentBalance}\r\n        <br />\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  const renderSelectSendOption = () => {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <select\r\n          value={sendOption}\r\n          onChange={(e) => setSendOption(e.target.value)}\r\n        >\r\n          <option value={SEND_OPTIONS.self}>{SEND_OPTIONS.self}</option>\r\n          <option value={SEND_OPTIONS.other}>{SEND_OPTIONS.other}</option>\r\n          <option value={SEND_OPTIONS.deposit}>{SEND_OPTIONS.deposit}</option>\r\n          <option value={SEND_OPTIONS.update}>{SEND_OPTIONS.update}</option>\r\n          <option value={SEND_OPTIONS.withdraw}>{SEND_OPTIONS.withdraw}</option>\r\n        </select>\r\n        <br />\r\n        <br />\r\n        {renderForm()}\r\n        <br />\r\n        {renderSubmitButton()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderForm = () => {\r\n    if (sendOption === SEND_OPTIONS.self) {\r\n      return (\r\n        <table\r\n          style={{\r\n            margin: \"auto\",\r\n            borderSpacing: \"12px 12px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <tbody>\r\n            {renderAmountToSendInput()}\r\n            {renderNumberOfDaysDropdown()}\r\n            {renderAmountToBeStaked()}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    } else if (sendOption === SEND_OPTIONS.other) {\r\n      return (\r\n        <table\r\n          style={{\r\n            margin: \"auto\",\r\n            borderSpacing: \"12px 12px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <tbody>\r\n            {renderAmountToSendInput()}\r\n            {renderNumberOfDaysDropdown()}\r\n            {renderUserInput()}\r\n            {renderAmountToBeStaked()}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    } else if (sendOption === SEND_OPTIONS.deposit) {\r\n      return (\r\n        <table\r\n          style={{\r\n            margin: \"auto\",\r\n            borderSpacing: \"12px 12px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <tbody>{renderAmountToSendInput()}</tbody>\r\n        </table>\r\n      );\r\n    } else if (sendOption === SEND_OPTIONS.update) {\r\n      return (\r\n        <table\r\n          style={{\r\n            margin: \"auto\",\r\n            borderSpacing: \"12px 12px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <tbody>{renderUpdateBalance()}</tbody>\r\n        </table>\r\n      );\r\n    } else if (sendOption === SEND_OPTIONS.withdraw) {\r\n      return (\r\n        <table\r\n          style={{\r\n            margin: \"auto\",\r\n            borderSpacing: \"12px 12px\",\r\n            textAlign: \"left\",\r\n          }}\r\n        >\r\n          <tbody>{renderWithdraw()}</tbody>\r\n        </table>\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderUserInput = () => {\r\n    return (\r\n      <tr>\r\n        <td style={{ textAlign: \"right\" }}>User to stake to</td>\r\n        <td>\r\n          <input\r\n            style={{ width: \"120px\" }}\r\n            type=\"text\"\r\n            value={accountToStake}\r\n            onChange={(e) => setAccountToStake(e.target.value)}\r\n          />\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const renderNumberOfDaysDropdown = () => {\r\n    return (\r\n      <tr>\r\n        <td style={{ textAlign: \"right\" }}>Number of days</td>\r\n        <td>\r\n          <select\r\n            value={numberOfDaysOption}\r\n            onChange={(e) => setNumberOfDaysOptions(e.target.value)}\r\n          >\r\n            <option value={1}>1</option>\r\n            <option value={2}>2</option>\r\n            <option value={3}>3</option>\r\n            <option value={4}>4</option>\r\n            <option value={5}>5</option>\r\n            <option value={6}>6</option>\r\n            <option value={7}>7</option>\r\n            <option value={8}>8</option>\r\n            <option value={9}>9</option>\r\n            <option value={10}>10</option>\r\n            <option value={11}>11</option>\r\n            <option value={12}>12</option>\r\n            <option value={13}>13</option>\r\n            <option value={14}>14</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const renderAmountToSendInput = () => {\r\n    return (\r\n      <tr>\r\n        <td style={{ textAlign: \"right\" }}>Amount to send</td>\r\n        <td>\r\n          <input\r\n            style={{ width: \"60px\" }}\r\n            type=\"number\"\r\n            value={amountToSend}\r\n            onChange={(e) => setAmountToSend(e.target.value)}\r\n          />{\" \"}\r\n          WAX\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const renderUpdateBalance = () => {\r\n    return (\r\n      <tr>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const renderWithdraw = () => {\r\n    return (\r\n      <tr>\r\n        <td style={{ textAlign: \"right\" }}>Amount to withdraw</td>\r\n        <td>\r\n          <input\r\n            style={{ width: \"60px\" }}\r\n            type=\"number\"\r\n            value={amountToSend}\r\n            onChange={(e) => setAmountToSend(e.target.value)}\r\n          />{\" \"}\r\n          WAX\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const renderAmountToBeStaked = () => {\r\n    return (\r\n      <tr>\r\n        <td style={{ textAlign: \"right\" }}>Amount to be staked</td>\r\n        <td>{amountToBeStaked.toLocaleString()} WAX</td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const renderSubmitButton = () => {\r\n    return (\r\n      <div>\r\n        <button onClick={() => TRANSACTIONS[sendOption].call()}>\r\n          {sendOption}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderFaq = () => {\r\n    return (\r\n      <div>\r\n        <h2>How it works:</h2>\r\n        <h4>Requesting Wax:</h4>\r\n        <p>1. Send wax</p>\r\n        <p>2. ????????</p>\r\n        <h4>Depositing Wax:</h4>\r\n        <p>3. Get steak</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>CPU 4 SALE</h1>\r\n      {ual.activeUser ? renderNameAndBalance() : null}\r\n      {ual.activeUser ? depositedWax() : null}\r\n      {ual.activeUser ? renderLogoutButton() : renderLoginButton()}\r\n      {ual.activeUser ? renderSelectSendOption() : null}\r\n      <br />\r\n      {renderFaq()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./App.css\";\nimport Home from \"./Home\";\n\nfunction App({ ual }) {\n  return (\n    <div className=\"App\">\n      <Home ual={ual} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { UALProvider, withUAL } from \"ual-reactjs-renderer\";\nimport { Anchor } from \"ual-anchor\";\nimport { Wax } from \"@eosdacio/ual-wax\";\n\n// const myChain = {\n//   chainId: \"1064487b3cd1a897ce03ae5b6a865651747e2e152090f99c1d19d44e01aea5a4\",\n//   rpcEndpoints: [\n//     {\n//       protocol: \"https\",\n//       host: \"wax.greymass.com\",\n//       port: \"443\",\n//     },\n//   ],\n// };\n\nconst myChain = {\n  chainId: \"f16b1833c747c43682f4386fca9cbb327929334a762755ebec17f6f23c9b8a12\",\n  rpcEndpoints: [\n    {\n      protocol: \"https\",\n      host: \"testnet.wax.eosdetroit.io\",\n      port: \"443\",\n    },\n  ],\n};\n\nconst anchor = new Anchor([myChain], { appName: \"cpu4\" });\nconst wax = new Wax([myChain], { appName: \"cpu4\" });\n\nconst MyUALConsumer = withUAL(App);\n\nReactDOM.render(\n  <React.StrictMode>\n    <UALProvider\n      chains={[myChain]}\n      authenticators={[anchor, wax]}\n      appName={\"cpu4\"}\n    >\n      <MyUALConsumer />\n    </UALProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}